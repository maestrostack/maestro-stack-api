{"version":3,"sources":["webpack:///src/app/modules/stacks/stack-details/stack-details.component.ts","webpack:///src/app/modules/stacks/stack-details/stack-details.component.html","webpack:///src/app/modules/stacks/stacks-browse/stacks-browse.component.ts","webpack:///src/app/modules/stacks/stacks-browse/stacks-browse.component.html","webpack:///src/app/modules/stacks/stacks-routing.module.ts","webpack:///src/app/modules/stacks/stacks.component.ts","webpack:///src/app/modules/stacks/stacks.component.html","webpack:///src/app/modules/stacks/stacks.module.ts"],"names":["StackDetailsComponent","dataService","activatedRoute","loading","displayNodeDetails","displayDetailsLoading","currentDetailsNode","params","subscribe","p","stackId","stack","loadStackNodes","item$","record$","i","item","nodes$","records$","_stack","$sort","order","pipe","r","data","n","details$","_id","setTimeout","selector","templateUrl","styleUrls","StacksBrowseComponent","authService","stacks$","name","routes","path","component","children","pathMatch","redirectTo","StacksRoutingModule","forChild","imports","exports","StacksComponent","StacksModule","declarations"],"mappings":"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","file":"modules-stacks-stacks-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy, AfterViewInit, AfterContentInit, Input, ViewChild } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../../core/services/data.service';\nimport { AuthService } from '../../core/services/auth.service';\n\n\n@Component({\n  selector: 'app-stack-details',\n  templateUrl: './stack-details.component.html',\n  styleUrls: ['./stack-details.component.scss']\n})\nexport class StackDetailsComponent implements OnInit {\n\n  item$: Observable<any>;\n  item: any;\n  loading: boolean = true;\n  nodes$: Observable<any>;\n  stackId: any;\n\n  details$: Observable<any>;\n\n  displayNodeDetails: boolean = false;\n  displayDetailsLoading: boolean = true;\n  currentDetailsNode = null;\n\n  constructor(\n    private dataService: DataService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  \n  \n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe( p => {\n      this.stackId = p.stack;\n      this.loadStackNodes();\n      this.item$ = this.dataService.record$('api/stacks', p.stack);\n    });\n\n    this.item$.subscribe( i => {\n      this.item = i;\n    })\n  }\n\n  loadStackNodes() {\n    this.nodes$ = this.dataService.records$('api/stack-resources', {\n      _stack: this.stackId,\n      $sort: {\n        order: 1\n      }\n    })\n    .pipe(\n      map(( r: Paginated<any>) => r.data)\n    )\n\n    // this.nodes$.subscribe( i => {\n    //   console.log(i)\n    //   this.loading = false;\n    // })\n  }\n\n\n  showNodeDetails(n) {\n    this.displayNodeDetails = true;\n    this.details$ = this.dataService.record$('api/stack-resources', n._id)\n      \n    setTimeout( () => {\n      this.displayDetailsLoading = false;\n    }, 2000)\n  }\n\n}\n","<div class=\"catalog-content-container\" *ngIf=\"item$ | async as item\">\n  <div class=\"catalog-content-menu\">\n\n  </div>\n\n  <div class=\"clr-row\">\n\n    <div class=\"clr-col\" *ngIf=\"!displayNodeDetails\">\n      <div class=\"catalog-content-timeline\" *ngIf=\"nodes$ | async as nodes\">\n        <clr-timeline clrLayout=\"vertical\" style=\"width: 95%\">\n          <clr-timeline-step [clrState]=\"item.ui_start_icon\">\n            <clr-timeline-step-header>START</clr-timeline-step-header>\n            <clr-timeline-step-title>{{ item.ui_start_header }}</clr-timeline-step-title>\n            <clr-timeline-step-description>{{ item.ui_start_msg }}</clr-timeline-step-description>\n          </clr-timeline-step>\n          <clr-timeline-step [clrState]=\"n.ui_state_icon\" *ngFor=\"let n of nodes\">\n            <clr-timeline-step-header>\n              {{ n.state }}\n              <!-- <clr-icon [attr.shape]=\"n.icon\" style=\"width: 12px; height: 12px;\"></clr-icon> -->\n            </clr-timeline-step-header>\n            <clr-timeline-step-title>{{ n.name }}</clr-timeline-step-title>\n            <clr-timeline-step-description>\n              \n              {{ n.description }}\n\n              <pre style=\"font-size: 12px; border: none; padding: 10px; background-color: black; color: chartreuse; max-height: 300px; min-width: 70vw; overflow: scroll; overflow-wrap: break-word;\">\n                {{n.ui_console_out}}\n              </pre>\n              <button class=\"btn btn-sm\" (click)=\"showNodeDetails(n);\">Details</button>\n            </clr-timeline-step-description>\n          </clr-timeline-step>\n          <!-- <clr-timeline-step class=\"gemini-ignore\" clrState=\"processing\">\n            <clr-timeline-step-header>11:59 am</clr-timeline-step-header>\n            <clr-timeline-step-title>Make vCenter trust KMS</clr-timeline-step-title>\n            <clr-timeline-step-description>\n              Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n              and very long.\n            </clr-timeline-step-description>\n          </clr-timeline-step>\n          <clr-timeline-step clrState=\"success\">\n            <clr-timeline-step-header>11:59 am</clr-timeline-step-header>\n            <clr-timeline-step-title>Make KMS trust vCenter</clr-timeline-step-title>\n            <clr-timeline-step-description>Upload it to the KMS to complete the connection. Third\n              sentence.\n              <button class=\"btn btn-sm btn-link\">Action</button>\n            </clr-timeline-step-description>\n          </clr-timeline-step>\n          <clr-timeline-step clrState=\"error\">\n            <clr-timeline-step-header>11:59 am</clr-timeline-step-header>\n            <clr-timeline-step-title>Connected</clr-timeline-step-title>\n            <clr-timeline-step-description>No. It's not connected.</clr-timeline-step-description>\n          </clr-timeline-step> -->\n    \n          <clr-timeline-step [clrState]=\"item.ui_end_icon\">\n            <clr-timeline-step-header>END</clr-timeline-step-header>\n            <clr-timeline-step-title></clr-timeline-step-title>\n            <clr-timeline-step-description>\n              \n              <!-- <button class=\"btn btn-sm btn-link\">Action</button> -->\n            </clr-timeline-step-description>\n          </clr-timeline-step>\n        </clr-timeline>\n      </div>\n    </div>\n\n    <div class=\"clr-col\" *ngIf=\"displayNodeDetails\">\n\n      <app-page-loading *ngIf=\"displayDetailsLoading\"></app-page-loading>\n\n      <div class=\"node-details-container\" *ngIf=\"!displayDetailsLoading\" style=\"background-color: black; color: floralwhite; height: 90%; overflow: scroll;\">\n        <pre *ngIf=\"details$ | async as details\" style=\"font-size: 12px; border: none;\">\n          {{details.ui_console_out}}\n        </pre>\n        \n      </div>\n\n    </div>\n  </div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/services/auth.service';\nimport { DataService } from '../../core/services/data.service';\n\n\n@Component({\n  selector: 'app-stacks-browse',\n  templateUrl: './stacks-browse.component.html',\n  styleUrls: ['./stacks-browse.component.scss']\n})\nexport class StacksBrowseComponent implements OnInit {\n\n  stacks$: Observable<any>;\n\n  loading: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n    this.stacks$ = this.dataService.records$('stacks', {\n      $sort: {\n        name: 1\n      }\n    })\n      .pipe(\n        map(( r: Paginated<any>) => r.data)\n      )\n\n    this.loading = false;\n\n  }\n\n}\n","<app-page-loading *ngIf=\"loading\"></app-page-loading>\n\n<div class=\"catalog-browse-container\" *ngIf=\"!loading\">\n  <div class=\"catalog-browse-menu\">\n\n  </div>\n\n  <div class=\"catalog-items-container\" *ngIf=\"stacks$ | async as items\">\n\n    <div class=\"catalog-items\">\n\n      <div class=\"clr-row\">\n        <div class=\"clr-col\">\n\n          <div class=\"alert alert-info\" role=\"alert\">\n            <div class=\"alert-items\">\n              <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">Manage an existing stack here by clicking the stack you would like to manage.</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"clr-row items-row\">\n        <div class=\"clr-col-lg-3 clr-col-md-6 clr-col-12\" *ngFor=\"let item of items\">\n          <a routerLink=\"/stacks/details/{{ item._id }}\" class=\"card item-card clickable\">\n            <div class=\"card-block\">\n              <div class=\"card-title\">\n                {{ item.name }}\n              </div>\n              <p class=\"card-text\">\n                {{ item.description }}\n              </p>\n            </div>\n          </a>\n        </div>\n      </div>\n\n\n\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StacksComponent } from './stacks.component';\nimport { StacksBrowseComponent } from './stacks-browse/stacks-browse.component';\nimport { StackDetailsComponent } from './stack-details/stack-details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StacksComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'browse'\n      },\n      {\n        path: 'browse',\n        component: StacksBrowseComponent\n      },\n      {\n        path: 'details/:stack',\n        component: StackDetailsComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StacksRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router } from '@angular/router';\nimport { DataService } from '../core/services/data.service';\nimport { AuthService } from '../core/services/auth.service';\n\n\n\n@Component({\n  selector: 'app-stacks',\n  templateUrl: './stacks.component.html',\n  styleUrls: ['./stacks.component.scss']\n})\nexport class StacksComponent implements OnInit {\n\n  stacks$: Observable<any>;\n\n  loading: boolean = true;\n\n  constructor(\n    private authService: AuthService,\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    setTimeout( () => {\n      this.loading = false;\n    }, 2000)\n  }\n\n}\n","<app-page-loading *ngIf=\"loading\"></app-page-loading>\n\n<div class=\"module-content-container\" *ngIf=\"!loading\">\n  <div class=\"module-header-wrapper\" style=\"border-bottom: 1px solid #cccccc;\">\n    <div class=\"module-header-container\" class=\"flex-container\"  style=\"padding: 15px;\">\n\n      <div class=\"module-branding\">\n        <div class=\"module-brand\">\n          <clr-icon class=\"is-solid\" style=\"margin-right: 10px;\" shape=\"layers\"></clr-icon>\n          <span class=\"module-title\">\n            Stacks\n          </span>\n        </div>\n      </div>\n\n      <div class=\"module-nav\" style=\"margin-left: 25px;\">\n        <!-- <a href=\"javascript://\" class=\"nav-link nav-icon\">\n          <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n        </a> -->\n      </div>\n\n    </div>\n\n  </div>\n\n\n  <div class=\"module-content-area\" style=\"padding: 10px;\">\n\n    <router-outlet></router-outlet>\n\n\n  \n  </div>\n\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StacksRoutingModule } from './stacks-routing.module';\nimport { StacksComponent } from './stacks.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ClarityModule } from '@clr/angular';\nimport { StacksBrowseComponent } from './stacks-browse/stacks-browse.component';\nimport { StackDetailsComponent } from './stack-details/stack-details.component';\n\n\n@NgModule({\n  declarations: [StacksComponent, StacksBrowseComponent, StackDetailsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ClarityModule,\n    StacksRoutingModule\n  ]\n})\nexport class StacksModule { }\n"]}