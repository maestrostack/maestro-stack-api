{"version":3,"sources":["webpack:///src/app/modules/tower-workflows/tower-workflows-routing.module.ts","webpack:///src/app/modules/tower-workflows/tower-workflows.component.ts","webpack:///src/app/modules/tower-workflows/tower-workflows.component.html","webpack:///src/app/modules/tower-workflows/tower-workflows.module.ts"],"names":["routes","path","component","TowerWorkflowsRoutingModule","forChild","imports","exports","TowerWorkflowsComponent","dataService","service","selected","addRecord","newRecord","name","description","repo","modules$","records$","pipe","r","data","createRecord","then","error","alert","selector","templateUrl","styleUrls","TowerWorkflowsModule","declarations"],"mappings":"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","file":"modules-tower-workflows-tower-workflows-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TowerWorkflowsComponent } from './tower-workflows.component';\n\nconst routes: Routes = [{ path: '', component: TowerWorkflowsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TowerWorkflowsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router } from '@angular/router';\nimport { DataService } from '../core/services/data.service';\n\n@Component({\n  selector: 'app-tower-workflows',\n  templateUrl: './tower-workflows.component.html',\n  styleUrls: ['./tower-workflows.component.scss']\n})\nexport class TowerWorkflowsComponent implements OnInit {\n  modules$: Observable<any>;\n\n  service: string = 'api/terraform/modules';\n\n  selected = [];\n\n  addRecord: boolean = false;\n  newRecord = {\n    name: '',\n    description: '',\n    repo: ''\n  };\n\n\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.modules$ = this.dataService.records$('api/terraform/modules', {})\n      .pipe(\n        map(( r: Paginated<any>) => r.data)\n      )\n  }\n\n  createRecord() {\n    this.dataService.createRecord('api/terraform/modules', this.newRecord)\n      .then( data => {\n        // this.addRecord = false;\n      })\n      .catch(\n        error => {\n\n        }\n      )\n  }\n\n  onAdd() {\n\n    this.addRecord = true;\n\n  }\n\n  onEdit(r) {\n\n  }\n\n  onDelete(r) {\n\n    alert('TODO: Allow deletion of modules while making sure we do not break down stream stacks...')\n\n    // this.dataService.records$('api/terraform/module-variables', {\n    //   _module: r._id\n    // })\n    // .pipe(\n    //   map(( r: Paginated<any>) => r.total)\n    // )\n    // .subscribe( total => {\n    //   if(total == 0) {\n         \n    //   }\n    //   else {\n    //     alert('');\n    //   }\n    // } )\n\n  }\n}\n","<div class=\"module-content-container\">\n  <div class=\"module-header-wrapper\" style=\"border-bottom: 1px solid #cccccc;\">\n    <div class=\"module-header-container\" class=\"flex-container\"  style=\"padding: 15px;\">\n\n      <div class=\"module-branding\">\n        <div class=\"module-brand\">\n          <clr-icon class=\"is-solid\" style=\"margin-right: 10px;\" shape=\"ansible\"></clr-icon>\n          <span class=\"module-title\">\n            Tower Workflows\n          </span>\n        </div>\n      </div>\n\n      <div class=\"module-nav\" style=\"margin-left: 25px;\">\n        <!-- <a href=\"javascript://\" class=\"nav-link nav-icon\">\n          <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n        </a> -->\n      </div>\n\n    </div>\n\n  </div>\n\n\n  <div class=\"module-content-area\" style=\"padding: 10px;\">\n\n\n    <app-records-list-view [table]=\"'towerWorkflows'\"></app-records-list-view>\n\n  \n  </div>\n\n</div>\n\n<clr-modal [(clrModalOpen)]=\"addRecord\">\n  <h3 class=\"modal-title\">Add Module</h3>\n  <div class=\"modal-body\">\n    <form clrForm>\n      <clr-input-container>\n          <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n          <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.name\" name=\"name\" required />\n          <clr-control-helper>The name of the Module displayed to users in the catalog and workflow designer.</clr-control-helper>\n          <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-input-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Repo</label>\n        <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.repo\" name=\"repo\" required />\n        <clr-control-helper>The Git repository for this module.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-textarea-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n        <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"newRecord.description\" name=\"description\" required></textarea>\n        <clr-control-helper>A useful description of this module, displayed to users in the workflow designer to provide context.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-textarea-container>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"addRecord = false\">Cancel</button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"createRecord()\">Ok</button>\n  </div>\n</clr-modal>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TowerWorkflowsRoutingModule } from './tower-workflows-routing.module';\nimport { TowerWorkflowsComponent } from './tower-workflows.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ClarityModule } from '@clr/angular';\n\n\n@NgModule({\n  declarations: [TowerWorkflowsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ClarityModule,\n    TowerWorkflowsRoutingModule\n  ]\n})\nexport class TowerWorkflowsModule { }\n"]}