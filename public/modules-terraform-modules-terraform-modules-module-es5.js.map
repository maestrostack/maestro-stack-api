{"version":3,"sources":["webpack:///src/app/modules/terraform-modules/terraform-module-details/terraform-module-details.component.ts","webpack:///src/app/modules/terraform-modules/terraform-module-details/terraform-module-details.component.html","webpack:///src/app/modules/terraform-modules/terraform-modules-routing.module.ts","webpack:///src/app/modules/terraform-modules/terraform-modules.component.ts","webpack:///src/app/modules/terraform-modules/terraform-modules.component.html","webpack:///src/app/modules/terraform-modules/terraform-modules.module.ts"],"names":["TerraformModuleDetailsComponent","dataService","addRecord","newRecord","label","name","description","_module","saveModuleSuccess","saveVariableSuccess","variables$","records$","record","_id","pipe","r","data","console","log","event","detail","updateRecord","then","setTimeout","error","createRecord","deleteRecord","selector","templateUrl","styleUrls","routes","path","component","TerraformModulesRoutingModule","forChild","imports","exports","TerraformModulesComponent","service","selected","repo","modules$","alert","TerraformModulesModule","declarations"],"mappings":"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","file":"modules-terraform-modules-terraform-modules-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router } from '@angular/router';\nimport { DataService } from '../../core/services/data.service';\n\n@Component({\n  selector: 'app-terraform-module-details',\n  templateUrl: './terraform-module-details.component.html',\n  styleUrls: ['./terraform-module-details.component.scss']\n})\nexport class TerraformModuleDetailsComponent implements OnInit {\n\n  @Input('record') record: any;\n\n  variables$: Observable<any>;\n\n  addRecord: boolean = false;\n\n  newRecord = {\n    label: '',\n    name: '',\n    description: '',\n    _module: null\n\n  }\n\n  detail: any;\n\n  saveModuleSuccess: boolean = false;\n  saveVariableSuccess: boolean = false;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.variables$ = this.dataService.records$('api/terraform/module-variables', {\n      _module: this.record._id\n    })\n    .pipe(\n      map(( r: Paginated<any>) => r.data)\n    )\n\n    console.log(this.record);\n  }\n\n  onModuleDetailOpen(event) {\n    console.log(event);\n  }\n\n  saveModule(detail) {\n    this.dataService.updateRecord('api/terraform/modules', detail._id, detail)\n      .then( () => {\n        this.saveModuleSuccess = true;\n        setTimeout( () => {\n          this.saveModuleSuccess = false;\n          this.detail = null;\n        }, 3000);\n      })\n      .catch( error => {\n\n      });\n  }\n\n  saveRecord(detail) {\n\n    this.dataService.updateRecord('api/terraform/module-variables', detail._id, detail)\n      .then( () => {\n        this.saveVariableSuccess = true;\n\n        setTimeout( () => {\n          this.saveVariableSuccess = false;\n\n          this.detail = null;\n        }, 3000)\n      })\n\n  }\n\n  createRecord() {\n    this.newRecord._module = this.record._id;\n\n    this.dataService.createRecord('api/terraform/module-variables', this.newRecord)\n      .then( () => {\n        this.addRecord = false;\n      })\n  }\n\n  onAdd() {\n\n    this.addRecord = true;\n\n  }\n\n  onEdit(r) {\n\n\n  }\n\n  onDelete(r) {\n\n\n    this.dataService.deleteRecord('api/terraform/module-variables', r._id, r);\n\n\n  }\n\n}\n","<clr-tabs>\n  <clr-tab>\n      <button clrTabLink id=\"details\">Details</button>\n      <clr-tab-content id=\"details\" *clrIfActive=\"true\">\n\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saveModuleSuccess\">\n          <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                  <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <span class=\"alert-text\">\n                Your changes have been saved to the database.\n              </span>\n            </div>\n          </div>\n        </div>\n\n\n        <form clrForm>\n          \n            <clr-input-container>\n                <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n                <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"record.name\" name=\"name\" required />\n                <clr-control-helper>The name of the Module displayed to users in the catalog and workflow designer.</clr-control-helper>\n                <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n            </clr-input-container>\n            <clr-input-container>\n              <label class=\"clr-col-12 clr-col-md-3\">Repo</label>\n              <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"record.repo\" name=\"repo\" required />\n              <clr-control-helper>The Git repository for this module.</clr-control-helper>\n              <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n            </clr-input-container>\n            <clr-textarea-container>\n              <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n              <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"record.description\" name=\"description\" required></textarea>\n              <clr-control-helper>A useful description of this module, displayed to users in the workflow designer to provide context.</clr-control-helper>\n              <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n            </clr-textarea-container>\n          \n\n          <button class=\"btn btn-sm btn-primary\" (click)=\"saveModule(record)\">Save</button>\n        </form>\n      </clr-tab-content>\n  </clr-tab>\n  <clr-tab>\n    <button clrTabLink>Variables</button>\n    <clr-tab-content *clrIfActive>\n      <br>\n      <!-- VARIABLES DG -->\n      <clr-datagrid *ngIf=\"variables$ | async as records\">\n\n\n        <clr-dg-action-bar style=\"margin-top: 0px !important;\">\n          <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\"><clr-icon shape=\"plus\"></clr-icon> Add Variable </button>\n            <!-- <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" ><clr-icon shape=\"close\"></clr-icon> Delete</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\"><clr-icon shape=\"pencil\"></clr-icon> Edit</button> -->\n          </div>\n          <!-- <div class=\"btn-group\">\n            <clr-dropdown>\n                <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                    Export\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                    <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                    <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n          </div> -->\n        </clr-dg-action-bar>\n  \n  \n        <clr-dg-placeholder>Hmm... We couldn't find any variables for this module!</clr-dg-placeholder>\n        <clr-dg-column [clrDgField]=\"'name'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Name\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'description'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Description\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'created_by'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n            Created by\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'created'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Created\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'updated_by'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n            Updated by\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'updated'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Updated\n          </ng-container>\n        </clr-dg-column>\n        \n    \n        <clr-dg-row *clrDgItems=\"let r of records\" [clrDgItem]=\"r\">\n          <clr-dg-action-overflow>\n            <button class=\"action-item\" (click)=\"onDelete(r)\">Delete</button>\n          </clr-dg-action-overflow>\n          <clr-dg-cell>{{r.name}}</clr-dg-cell>\n          <!-- <clr-dg-cell>{{r.repo}}</clr-dg-cell> -->\n          <clr-dg-cell>{{r.description}}</clr-dg-cell>\n          <clr-dg-cell>{{r.created_by}}</clr-dg-cell>\n          <clr-dg-cell>{{r.created_at | date }}</clr-dg-cell>\n          <clr-dg-cell>{{r.updated_by}}</clr-dg-cell>\n          <clr-dg-cell>{{r.updated_at | date }}</clr-dg-cell>\n        </clr-dg-row>\n\n        <clr-dg-footer>\n          <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n            <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Variables per page</clr-dg-page-size>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{pagination.totalItems}} variables\n          </clr-dg-pagination>\n        </clr-dg-footer>\n    \n\n  \n  \n        <!-- <clr-dg-detail *clrIfDetail=\"let detail\"> -->\n\n          <ng-template clrIfDetail let-detail (clrIfDetailChange)=\"onModuleDetailOpen($event)\">\n            <clr-dg-detail>\n              <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n              <clr-dg-detail-body>\n\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saveVariableSuccess\">\n                  <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                      <div class=\"alert-icon-wrapper\">\n                          <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                      </div>\n                      <span class=\"alert-text\">\n                        Your changes have been saved to the database.\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <form clrForm>\n                  <clr-input-container>\n                      <label class=\"clr-col-12 clr-col-md-3\">Label</label>\n                      <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"detail.label\" name=\"label\" required />\n                      <clr-control-helper>The label for the variable that is displayed to users in the catalog.</clr-control-helper>\n                      <!-- <clr-control-error></clr-control-error> -->\n                  </clr-input-container>\n                  <clr-input-container>\n                    <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n                    <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"detail.name\" name=\"name\" required />\n                    <clr-control-helper>The name of the variable that exists in the Terraform Module.</clr-control-helper>\n                    <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n                  </clr-input-container>\n                  <clr-textarea-container>\n                    <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n                    <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"detail.description\" name=\"description\" required></textarea>\n                    <clr-control-helper>Description or help text that will displayed to user in the catalog to explain the variable.</clr-control-helper>\n                    <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n                  </clr-textarea-container>\n    \n                  <button (click)=\"saveRecord(detail)\" type=\"button\" class=\"btn btn-sm btn-primary\">\n                    Save\n                  </button>\n                </form>\n              </clr-dg-detail-body>\n            </clr-dg-detail>\n          </ng-template>\n\n        <!-- </clr-dg-detail> -->\n      </clr-datagrid>\n    </clr-tab-content>\n  </clr-tab>\n</clr-tabs>\n\n<clr-modal [(clrModalOpen)]=\"addRecord\">\n  <h3 class=\"modal-title\">Add Variable</h3>\n  <div class=\"modal-body\">\n    <form clrForm>\n      <clr-input-container>\n          <label class=\"clr-col-12 clr-col-md-3\">Label</label>\n          <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.label\" name=\"label\" required />\n          <clr-control-helper>The label for the variable that is displayed to users in the catalog.</clr-control-helper>\n          <!-- <clr-control-error></clr-control-error> -->\n      </clr-input-container>\n      <clr-input-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n        <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.name\" name=\"name\" required />\n        <clr-control-helper>The name of the variable that exists in the Terraform Module.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-textarea-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n        <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"newRecord.description\" name=\"description\" required></textarea>\n        <clr-control-helper>Description or help text that will displayed to user in the catalog to explain the variable.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-textarea-container>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"addRecord = false\">Cancel</button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"createRecord()\">Ok</button>\n  </div>\n</clr-modal>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TerraformModulesComponent } from './terraform-modules.component';\n\nconst routes: Routes = [{ path: '', component: TerraformModulesComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TerraformModulesRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router } from '@angular/router';\nimport { DataService } from '../core/services/data.service';\n \n@Component({\n  selector: 'app-terraform-modules',\n  templateUrl: './terraform-modules.component.html',\n  styleUrls: ['./terraform-modules.component.scss']\n})\nexport class TerraformModulesComponent implements OnInit {\n\n  modules$: Observable<any>;\n\n  service: string = 'api/terraform/modules';\n\n  selected = [];\n\n  addRecord: boolean = false;\n  newRecord = {\n    name: '',\n    description: '',\n    repo: ''\n  };\n\n\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.modules$ = this.dataService.records$('api/terraform/modules', {})\n      .pipe(\n        map(( r: Paginated<any>) => r.data)\n      )\n  }\n\n  createRecord() {\n    this.dataService.createRecord('api/terraform/modules', this.newRecord)\n      .then( data => {\n        // this.addRecord = false;\n      })\n      .catch(\n        error => {\n\n        }\n      )\n  }\n\n  onAdd() {\n\n    this.addRecord = true;\n\n  }\n\n  onEdit(r) {\n\n  }\n\n  onDelete(r) {\n\n    alert('TODO: Allow deletion of modules while making sure we do not break down stream stacks...')\n\n    // this.dataService.records$('api/terraform/module-variables', {\n    //   _module: r._id\n    // })\n    // .pipe(\n    //   map(( r: Paginated<any>) => r.total)\n    // )\n    // .subscribe( total => {\n    //   if(total == 0) {\n         \n    //   }\n    //   else {\n    //     alert('');\n    //   }\n    // } )\n\n  }\n}\n","<div class=\"module-content-container\">\n  <div class=\"module-header-wrapper\" style=\"border-bottom: 1px solid #cccccc;\">\n    <div class=\"module-header-container\" class=\"flex-container\"  style=\"padding: 15px;\">\n\n      <div class=\"module-branding\">\n        <div class=\"module-brand\">\n          <clr-icon class=\"is-solid\" style=\"margin-right: 10px;\" shape=\"terraform\"></clr-icon>\n          <span class=\"module-title\">\n            Terraform Modules\n          </span>\n        </div>\n      </div>\n\n      <div class=\"module-nav\" style=\"margin-left: 25px;\">\n        <!-- <a href=\"javascript://\" class=\"nav-link nav-icon\">\n          <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n        </a> -->\n      </div>\n\n    </div>\n\n  </div>\n\n\n  <div class=\"module-content-area\" style=\"padding: 10px;\">\n\n\n    <app-records-list-view [table]=\"'modules'\"></app-records-list-view>\n\n  \n  </div>\n\n</div>\n\n<clr-modal [(clrModalOpen)]=\"addRecord\">\n  <h3 class=\"modal-title\">Add Module</h3>\n  <div class=\"modal-body\">\n    <form clrForm>\n      <clr-input-container>\n          <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n          <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.name\" name=\"name\" required />\n          <clr-control-helper>The name of the Module displayed to users in the catalog and workflow designer.</clr-control-helper>\n          <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-input-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Repo</label>\n        <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.repo\" name=\"repo\" required />\n        <clr-control-helper>The Git repository for this module.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-textarea-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n        <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"newRecord.description\" name=\"description\" required></textarea>\n        <clr-control-helper>A useful description of this module, displayed to users in the workflow designer to provide context.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-textarea-container>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"addRecord = false\">Cancel</button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"createRecord()\">Ok</button>\n  </div>\n</clr-modal>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TerraformModulesRoutingModule } from './terraform-modules-routing.module';\nimport { TerraformModulesComponent } from './terraform-modules.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ClarityModule } from '@clr/angular';\nimport { TerraformModuleDetailsComponent } from './terraform-module-details/terraform-module-details.component';\n\n\n@NgModule({\n  declarations: [TerraformModulesComponent, TerraformModuleDetailsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ClarityModule,\n    TerraformModulesRoutingModule\n  ]\n})\nexport class TerraformModulesModule { }\n"]}