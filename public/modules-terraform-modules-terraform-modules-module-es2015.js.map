{"version":3,"sources":["./src/app/modules/terraform-modules/terraform-module-details/terraform-module-details.component.ts","./src/app/modules/terraform-modules/terraform-module-details/terraform-module-details.component.html","./src/app/modules/terraform-modules/terraform-modules-routing.module.ts","./src/app/modules/terraform-modules/terraform-modules.component.ts","./src/app/modules/terraform-modules/terraform-modules.component.html","./src/app/modules/terraform-modules/terraform-modules.module.ts"],"names":[],"mappings":"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","file":"modules-terraform-modules-terraform-modules-module-es2015.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router } from '@angular/router';\nimport { DataService } from '../../core/services/data.service';\n\n@Component({\n  selector: 'app-terraform-module-details',\n  templateUrl: './terraform-module-details.component.html',\n  styleUrls: ['./terraform-module-details.component.scss']\n})\nexport class TerraformModuleDetailsComponent implements OnInit {\n\n  @Input('record') record: any;\n\n  variables$: Observable<any>;\n\n  addRecord: boolean = false;\n\n  newRecord = {\n    label: '',\n    name: '',\n    description: '',\n    _module: null\n\n  }\n\n  detail: any;\n\n  saveModuleSuccess: boolean = false;\n  saveVariableSuccess: boolean = false;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.variables$ = this.dataService.records$('api/terraform/module-variables', {\n      _module: this.record._id\n    })\n    .pipe(\n      map(( r: Paginated<any>) => r.data)\n    )\n\n    console.log(this.record);\n  }\n\n  onModuleDetailOpen(event) {\n    console.log(event);\n  }\n\n  saveModule(detail) {\n    this.dataService.updateRecord('api/terraform/modules', detail._id, detail)\n      .then( () => {\n        this.saveModuleSuccess = true;\n        setTimeout( () => {\n          this.saveModuleSuccess = false;\n          this.detail = null;\n        }, 3000);\n      })\n      .catch( error => {\n\n      });\n  }\n\n  saveRecord(detail) {\n\n    this.dataService.updateRecord('api/terraform/module-variables', detail._id, detail)\n      .then( () => {\n        this.saveVariableSuccess = true;\n\n        setTimeout( () => {\n          this.saveVariableSuccess = false;\n\n          this.detail = null;\n        }, 3000)\n      })\n\n  }\n\n  createRecord() {\n    this.newRecord._module = this.record._id;\n\n    this.dataService.createRecord('api/terraform/module-variables', this.newRecord)\n      .then( () => {\n        this.addRecord = false;\n      })\n  }\n\n  onAdd() {\n\n    this.addRecord = true;\n\n  }\n\n  onEdit(r) {\n\n\n  }\n\n  onDelete(r) {\n\n\n    this.dataService.deleteRecord('api/terraform/module-variables', r._id, r);\n\n\n  }\n\n}\n","<clr-tabs>\n  <clr-tab>\n      <button clrTabLink id=\"details\">Details</button>\n      <clr-tab-content id=\"details\" *clrIfActive=\"true\">\n\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saveModuleSuccess\">\n          <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                  <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <span class=\"alert-text\">\n                Your changes have been saved to the database.\n              </span>\n            </div>\n          </div>\n        </div>\n\n\n        <form clrForm>\n          \n            <clr-input-container>\n                <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n                <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"record.name\" name=\"name\" required />\n                <clr-control-helper>The name of the Module displayed to users in the catalog and workflow designer.</clr-control-helper>\n                <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n            </clr-input-container>\n            <clr-input-container>\n              <label class=\"clr-col-12 clr-col-md-3\">Repo</label>\n              <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"record.repo\" name=\"repo\" required />\n              <clr-control-helper>The Git repository for this module.</clr-control-helper>\n              <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n            </clr-input-container>\n            <clr-textarea-container>\n              <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n              <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"record.description\" name=\"description\" required></textarea>\n              <clr-control-helper>A useful description of this module, displayed to users in the workflow designer to provide context.</clr-control-helper>\n              <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n            </clr-textarea-container>\n          \n\n          <button class=\"btn btn-sm btn-primary\" (click)=\"saveModule(record)\">Save</button>\n        </form>\n      </clr-tab-content>\n  </clr-tab>\n  <clr-tab>\n    <button clrTabLink>Variables</button>\n    <clr-tab-content *clrIfActive>\n      <br>\n      <!-- VARIABLES DG -->\n      <clr-datagrid *ngIf=\"variables$ | async as records\">\n\n\n        <clr-dg-action-bar style=\"margin-top: 0px !important;\">\n          <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\"><clr-icon shape=\"plus\"></clr-icon> Add Variable </button>\n            <!-- <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" ><clr-icon shape=\"close\"></clr-icon> Delete</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\"><clr-icon shape=\"pencil\"></clr-icon> Edit</button> -->\n          </div>\n          <!-- <div class=\"btn-group\">\n            <clr-dropdown>\n                <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                    Export\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                    <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                    <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n          </div> -->\n        </clr-dg-action-bar>\n  \n  \n        <clr-dg-placeholder>Hmm... We couldn't find any variables for this module!</clr-dg-placeholder>\n        <clr-dg-column [clrDgField]=\"'name'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Name\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'description'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Description\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'created_by'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n            Created by\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'created'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Created\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'updated_by'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n            Updated by\n          </ng-container>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'updated'\">\n          <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Updated\n          </ng-container>\n        </clr-dg-column>\n        \n    \n        <clr-dg-row *clrDgItems=\"let r of records\" [clrDgItem]=\"r\">\n          <clr-dg-action-overflow>\n            <button class=\"action-item\" (click)=\"onDelete(r)\">Delete</button>\n          </clr-dg-action-overflow>\n          <clr-dg-cell>{{r.name}}</clr-dg-cell>\n          <!-- <clr-dg-cell>{{r.repo}}</clr-dg-cell> -->\n          <clr-dg-cell>{{r.description}}</clr-dg-cell>\n          <clr-dg-cell>{{r.created_by}}</clr-dg-cell>\n          <clr-dg-cell>{{r.created_at | date }}</clr-dg-cell>\n          <clr-dg-cell>{{r.updated_by}}</clr-dg-cell>\n          <clr-dg-cell>{{r.updated_at | date }}</clr-dg-cell>\n        </clr-dg-row>\n\n        <clr-dg-footer>\n          <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n            <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Variables per page</clr-dg-page-size>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{pagination.totalItems}} variables\n          </clr-dg-pagination>\n        </clr-dg-footer>\n    \n\n  \n  \n        <!-- <clr-dg-detail *clrIfDetail=\"let detail\"> -->\n\n          <ng-template clrIfDetail let-detail (clrIfDetailChange)=\"onModuleDetailOpen($event)\">\n            <clr-dg-detail>\n              <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n              <clr-dg-detail-body>\n\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saveVariableSuccess\">\n                  <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                      <div class=\"alert-icon-wrapper\">\n                          <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                      </div>\n                      <span class=\"alert-text\">\n                        Your changes have been saved to the database.\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <form clrForm>\n                  <clr-input-container>\n                      <label class=\"clr-col-12 clr-col-md-3\">Label</label>\n                      <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"detail.label\" name=\"label\" required />\n                      <clr-control-helper>The label for the variable that is displayed to users in the catalog.</clr-control-helper>\n                      <!-- <clr-control-error></clr-control-error> -->\n                  </clr-input-container>\n                  <clr-input-container>\n                    <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n                    <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"detail.name\" name=\"name\" required />\n                    <clr-control-helper>The name of the variable that exists in the Terraform Module.</clr-control-helper>\n                    <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n                  </clr-input-container>\n                  <clr-textarea-container>\n                    <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n                    <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"detail.description\" name=\"description\" required></textarea>\n                    <clr-control-helper>Description or help text that will displayed to user in the catalog to explain the variable.</clr-control-helper>\n                    <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n                  </clr-textarea-container>\n    \n                  <button (click)=\"saveRecord(detail)\" type=\"button\" class=\"btn btn-sm btn-primary\">\n                    Save\n                  </button>\n                </form>\n              </clr-dg-detail-body>\n            </clr-dg-detail>\n          </ng-template>\n\n        <!-- </clr-dg-detail> -->\n      </clr-datagrid>\n    </clr-tab-content>\n  </clr-tab>\n</clr-tabs>\n\n<clr-modal [(clrModalOpen)]=\"addRecord\">\n  <h3 class=\"modal-title\">Add Variable</h3>\n  <div class=\"modal-body\">\n    <form clrForm>\n      <clr-input-container>\n          <label class=\"clr-col-12 clr-col-md-3\">Label</label>\n          <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.label\" name=\"label\" required />\n          <clr-control-helper>The label for the variable that is displayed to users in the catalog.</clr-control-helper>\n          <!-- <clr-control-error></clr-control-error> -->\n      </clr-input-container>\n      <clr-input-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n        <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.name\" name=\"name\" required />\n        <clr-control-helper>The name of the variable that exists in the Terraform Module.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-textarea-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n        <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"newRecord.description\" name=\"description\" required></textarea>\n        <clr-control-helper>Description or help text that will displayed to user in the catalog to explain the variable.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-textarea-container>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"addRecord = false\">Cancel</button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"createRecord()\">Ok</button>\n  </div>\n</clr-modal>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TerraformModulesComponent } from './terraform-modules.component';\n\nconst routes: Routes = [{ path: '', component: TerraformModulesComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TerraformModulesRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router } from '@angular/router';\nimport { DataService } from '../core/services/data.service';\n \n@Component({\n  selector: 'app-terraform-modules',\n  templateUrl: './terraform-modules.component.html',\n  styleUrls: ['./terraform-modules.component.scss']\n})\nexport class TerraformModulesComponent implements OnInit {\n\n  modules$: Observable<any>;\n\n  service: string = 'api/terraform/modules';\n\n  selected = [];\n\n  addRecord: boolean = false;\n  newRecord = {\n    name: '',\n    description: '',\n    repo: ''\n  };\n\n\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.modules$ = this.dataService.records$('api/terraform/modules', {})\n      .pipe(\n        map(( r: Paginated<any>) => r.data)\n      )\n  }\n\n  createRecord() {\n    this.dataService.createRecord('api/terraform/modules', this.newRecord)\n      .then( data => {\n        // this.addRecord = false;\n      })\n      .catch(\n        error => {\n\n        }\n      )\n  }\n\n  onAdd() {\n\n    this.addRecord = true;\n\n  }\n\n  onEdit(r) {\n\n  }\n\n  onDelete(r) {\n\n    alert('TODO: Allow deletion of modules while making sure we do not break down stream stacks...')\n\n    // this.dataService.records$('api/terraform/module-variables', {\n    //   _module: r._id\n    // })\n    // .pipe(\n    //   map(( r: Paginated<any>) => r.total)\n    // )\n    // .subscribe( total => {\n    //   if(total == 0) {\n         \n    //   }\n    //   else {\n    //     alert('');\n    //   }\n    // } )\n\n  }\n}\n","<div class=\"module-content-container\">\n  <div class=\"module-header-wrapper\" style=\"border-bottom: 1px solid #cccccc;\">\n    <div class=\"module-header-container\" class=\"flex-container\"  style=\"padding: 15px;\">\n\n      <div class=\"module-branding\">\n        <div class=\"module-brand\">\n          <clr-icon class=\"is-solid\" style=\"margin-right: 10px;\" shape=\"terraform\"></clr-icon>\n          <span class=\"module-title\">\n            Terraform Modules\n          </span>\n        </div>\n      </div>\n\n      <div class=\"module-nav\" style=\"margin-left: 25px;\">\n        <!-- <a href=\"javascript://\" class=\"nav-link nav-icon\">\n          <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n        </a> -->\n      </div>\n\n    </div>\n\n  </div>\n\n\n  <div class=\"module-content-area\" style=\"padding: 10px;\">\n\n\n    <app-records-list-view [table]=\"'modules'\"></app-records-list-view>\n\n  \n  </div>\n\n</div>\n\n<clr-modal [(clrModalOpen)]=\"addRecord\">\n  <h3 class=\"modal-title\">Add Module</h3>\n  <div class=\"modal-body\">\n    <form clrForm>\n      <clr-input-container>\n          <label class=\"clr-col-12 clr-col-md-3\">Name</label>\n          <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.name\" name=\"name\" required />\n          <clr-control-helper>The name of the Module displayed to users in the catalog and workflow designer.</clr-control-helper>\n          <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-input-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Repo</label>\n        <input class=\"clr-col-12 clr-col-md-9\" clrInput type=\"text\" [(ngModel)]=\"newRecord.repo\" name=\"repo\" required />\n        <clr-control-helper>The Git repository for this module.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-input-container>\n      <clr-textarea-container>\n        <label class=\"clr-col-12 clr-col-md-3\">Description</label>\n        <textarea class=\"clr-col-12 clr-col-md-9\" clrTextarea [(ngModel)]=\"newRecord.description\" name=\"description\" required></textarea>\n        <clr-control-helper>A useful description of this module, displayed to users in the workflow designer to provide context.</clr-control-helper>\n        <!-- <clr-control-error>Error message that appears after focus is lost and control is invalid</clr-control-error> -->\n      </clr-textarea-container>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"addRecord = false\">Cancel</button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"createRecord()\">Ok</button>\n  </div>\n</clr-modal>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TerraformModulesRoutingModule } from './terraform-modules-routing.module';\nimport { TerraformModulesComponent } from './terraform-modules.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ClarityModule } from '@clr/angular';\nimport { TerraformModuleDetailsComponent } from './terraform-module-details/terraform-module-details.component';\n\n\n@NgModule({\n  declarations: [TerraformModulesComponent, TerraformModuleDetailsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ClarityModule,\n    TerraformModulesRoutingModule\n  ]\n})\nexport class TerraformModulesModule { }\n"],"sourceRoot":"webpack:///"}