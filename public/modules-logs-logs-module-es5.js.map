{"version":3,"sources":["webpack:///src/app/modules/logs/logs-routing.module.ts","webpack:///src/app/modules/logs/logs.component.ts","webpack:///src/app/modules/logs/logs.component.html","webpack:///src/app/modules/logs/logs.module.ts"],"names":["routes","path","component","LogsRoutingModule","forChild","imports","exports","LogsComponent","dataService","loading","logs$","records$","$sort","created_at","pipe","l","data","subscribe","selector","templateUrl","styleUrls","LogsModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CAAC;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KAAD,CAAvB;;QAMaC,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHnB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;0HAAjBG,iB,EAAiB;AAAA;AAAA,kBAFlB,4DAEkB;AAAA,O;AAFN,K;;;;;sEAEXA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIoB,Q;;;;;;;;;;;;;;;;;;ACX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBA;;;;;;AAoCM;;AACI;;AAAa;;AAAgB;;AAC7B;;AAAa;;AAAa;;AAC1B;;AACE;;AACF;;AACA;;AAAa;;;;AAAyB;;AAE1C;;;;;;AAPiB;;AAAA;;AACA;;AAAA;;AAEX;;AAAA;;AAEW;;AAAA;;;;;;;;;;AAhBrB;;AAEE;;AACE;;AAA+D;;AAAQ;;AACvE;;AAA4D;;AAAK;;AACjE;;AAAwC;;AAAO;;AAC/C;;AAAiE;;AAAO;;AAIxE;;AAUA;;AACE;;AACE;;AAA4D;;AAAa;;AACzE;;AAEF;;AACF;;AACF;;AAIF;;;;;;;;AA5ByC;;AAAA;;AACA;;AAAA;;AACtB;;AAAA;;AACsB;;AAAA;;AAIzB;;AAAA;;AAWqB;;AAAA;;AACX;;AAAA;;AAClB;;AAAA;;;;;;AA/CV;;AACE;;AACE;;AAEE;;AACE;;AACE;;AACA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AAMF;;AAEF;;AAGA;;;;AAiCF;;;;;;AAjC0D;;AAAA;;;;QDpC7CC,a;AAKX,6BACUC,WADV,EACkC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AAHV,aAAAC,OAAA,GAAmB,IAAnB;AAIK;;;;mCAEG;AAAA;;AAEN,eAAKC,KAAL,GAAa,KAAKF,WAAL,CAAiBG,QAAjB,CAA0B,QAA1B,EAAoC;AAC/CC,iBAAK,EAAE;AACLC,wBAAU,EAAE,CAAC;AADR;AADwC,WAApC,EAKVC,IALU,CAMT,2DAAI,UAAEC,CAAF;AAAA,mBAAwBA,CAAC,CAACC,IAA1B;AAAA,WAAJ,CANS,CAAb;AASA,eAAKN,KAAL,CAAWO,SAAX,CAAsB,YAAM;AAC1B,iBAAI,CAACR,OAAL,GAAe,KAAf;AACD,WAFD;AAGD;;;;;;;uBAvBUF,a,EAAa,wI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,mtB;AAAA;AAAA;ACU1B;;AAEA;;;;AAFkB;;AAEoB;;AAAA;;;;;;;;;;sEDZzBA,a,EAAa;cALzB,uDAKyB;eALf;AACTW,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAPZ,CACP,4DADO,EAEP,kEAFO,EAGP,0DAHO,EAIP,sEAJO,CAOY;;;;0HAAVA,U,EAAU;AAAA,uBARN,6DAQM;AARO,kBAE1B,4DAF0B,EAG1B,kEAH0B,EAI1B,0DAJ0B,EAK1B,sEAL0B;AAQP,O;AAHF,K;;;;;sEAGRA,U,EAAU;cATtB,sDASsB;eATb;AACRC,sBAAY,EAAE,CAAC,6DAAD,CADN;AAERjB,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,0DAHO,EAIP,sEAJO;AAFD,S;AASa,Q","file":"modules-logs-logs-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LogsComponent } from './logs.component';\n\nconst routes: Routes = [{ path: '', component: LogsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LogsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../core/services/data.service';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\n  logs$: Observable<any>;\n  loading: boolean = true;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.logs$ = this.dataService.records$('syslog', {\n      $sort: {\n        created_at: -1\n      }\n    })\n      .pipe(\n        map(( l: Paginated<any>) => l.data)\n      )\n\n    this.logs$.subscribe( () => {\n      this.loading = false;\n    })\n  }\n\n}\n","<!-- <div class=\"main-container\">\n  <div class=\"content-container\">\n    <div class=\"content-area\">\n      <app-page-loading *ngIf=\"loading\"></app-page-loading>\n      <div class=\"module-branding\">\n        <div class=\"module-brand\">\n          <clr-icon class=\"is-solid\" style=\"margin-right: 10px;\" shape=\"layers\"></clr-icon>\n          <span class=\"module-title\">\n            Logs\n          </span>\n        </div>\n      </div>\n      <div class=\"logs-wrapper\" *ngIf=\"!loading\">\n\n        <div class=\"logs-container\" *ngIf=\"logs$ | async as logs\">\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<app-page-loading *ngIf=\"loading\"></app-page-loading>\n\n<div class=\"module-content-container\" *ngIf=\"!loading\">\n  <div class=\"module-header-wrapper\" style=\"border-bottom: 1px solid #cccccc;\">\n    <div class=\"module-header-container\" class=\"flex-container\"  style=\"padding: 15px;\">\n\n      <div class=\"module-branding\">\n        <div class=\"module-brand\">\n          <clr-icon class=\"is-solid\" style=\"margin-right: 10px;\" shape=\"book\"></clr-icon>\n          <span class=\"module-title\">\n            Logs\n          </span>\n        </div>\n      </div>\n\n      <div class=\"module-nav\" style=\"margin-left: 25px;\">\n        <!-- <a href=\"javascript://\" class=\"nav-link nav-icon\">\n          <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n        </a> -->\n      </div>\n\n    </div>\n\n  </div>\n\n\n  <div class=\"module-content-area\" style=\"padding: 10px;\" *ngIf=\"logs$ | async as logs\">\n\n    <clr-datagrid>\n      <clr-dg-column style=\"width: 100px;\" [clrDgField]=\"'category'\">Category</clr-dg-column>\n      <clr-dg-column style=\"width: 150px;\" [clrDgField]=\"'topic'\">Topic</clr-dg-column>\n      <clr-dg-column [clrDgField]=\"'message'\">Message</clr-dg-column>\n      <clr-dg-column style=\"width: 150px;\" [clrDgField]=\"'created_at'\">Created</clr-dg-column>\n      <!-- <clr-dg-column [clrDgField]=\"'message'\">Favorite color</clr-dg-column> -->\n      <!-- <clr-dg-column [clrDgField]=\"'wins'\" [clrDgColType]=\"'number'\">Wins</clr-dg-column> -->\n  \n      <clr-dg-row *clrDgItems=\"let log of logs\">\n          <clr-dg-cell>{{log.category}}</clr-dg-cell>\n          <clr-dg-cell>{{log.topic}}</clr-dg-cell>\n          <clr-dg-cell>\n            {{ log.message }}\n          </clr-dg-cell>\n          <clr-dg-cell>{{log.created_at | date}}</clr-dg-cell>\n          \n      </clr-dg-row>\n  \n      <clr-dg-footer>\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"100\">\n          <clr-dg-page-size [clrPageSizeOptions]=\"[100,200,500,1000]\">Logs per page</clr-dg-page-size>\n          {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n          of {{pagination.totalItems}} logs\n        </clr-dg-pagination>\n      </clr-dg-footer>\n    </clr-datagrid>\n\n\n  \n  </div>\n\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LogsRoutingModule } from './logs-routing.module';\nimport { LogsComponent } from './logs.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ClarityModule } from '@clr/angular';\n\n\n@NgModule({\n  declarations: [LogsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ClarityModule,\n    LogsRoutingModule\n  ]\n})\nexport class LogsModule { }\n"]}