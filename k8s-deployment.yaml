---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: maestro
  name: maestro-api-data
  labels:
    app: maestro
    compontent: server
spec:
  accessModes:
  - ReadWriteOnce
  resources: 
    requests:
      storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: maestro
  name: maestro
  labels:
    app: maestro
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: maestro
      component: server
  template:
    metadata:
      labels:
        app: maestro
        component: server
    spec:
      containers:
      - name: maestro
        image: harbor.coretech.chst.io/automation/maestro-api-server:0.0.10
        ports:
        - containerPort: 3030
        volumeMounts:
        - mountPath: /home/node/data
          name: maestro-api-data
      securityContext:
        fsGroup: 1000
      volumes:
      - name: maestro-api-data
        persistentVolumeClaim:
          claimName: maestro-api-data
      restartPolicy: Always
      imagePullSecrets:
      - name: azureregcred       

---
apiVersion: v1
kind: Service
metadata:
  namespace: maestro
  name: maestro
  labels:
    app: maestro
    component: server
spec:
  ports:
  - name: maestro
    port: 3030
    targetPort: 3030
  selector:
    app: maestro
    component: server
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: maestro
  name: maestro
  labels:
    app: maestro
    component: server
  annotations:
    kubernetes.io/ingress.class: kong
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
      - maestro.faas.chst.io
      secretName: maestro-tls
  rules:
  - host: maestro.faas.chst.io
    http:
      paths:
      - path: /
        backend:
          serviceName: maestro
          servicePort: 3030
